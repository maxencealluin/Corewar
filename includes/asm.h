/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   asm.h                                              :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: ccepre <marvin@42.fr>                      +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/04/23 17:09:56 by ccepre            #+#    #+#             */
/*   Updated: 2019/04/24 15:55:23 by ccepre           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef __ASM_H__
# define __ASM_H__

#include <stdio.h>
#include <stdlib.h>

typedef enum		e_lex
{
	NAME = 4,
	COMMENT = 5,
	CARRIAGE = 6,
	COMMA = 7,
	DIRECT = 13,
	INDIRECT = 19,
	LABEL = 22,
	OPCODE = 23,
	REGISTER = 25,
	NONE = 0
}					t_lex;

typedef struct		s_token
{
	t_lex			lexem;
	char			*value;
	int				line;
	int				col;
	struct s_token	*next;
}					t_token;

typedef struct		s_instr
{
	int				op_code;
	char			*label;
	t_token			*params;
	struct s_instr	*next;
}					t_instr;

typedef struct		s_reader
{
	char			buff[BUFF_SIZE + 1];
	int				line;
	int				col;
	int				cursor;
}					t_reader;
				
int g_automate[27][13] =
{
	{0,1,6,7,8,14,16,18,20,24,26,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1},
	{3,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,4,-1},
	{3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1},
	{4,4,4,4,4,4,4,4,4,4,4,5,4},
	{-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2},
	{-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2},
	{-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2},
	{-1,-1,-1,-1,-1,9,11,12,-1,-1,-1,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,10,10,10,-1,-1,-1},
	{13,-1,13,13,-1,-1,-1,10,10,10,13,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,12,-1,-1,-1,-1,-1},
	{13,-1,13,13,-1,-1,-1,12,-1,-1,13,-1,-1},
	{-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
	{-1,-1,-1,-1,-1,-1,-1,15,15,15,-1,-1,-1},
	{19,-1,19,19,-1,-1,-1,15,15,15,19,-1,-1},
	{-1,-1,-1,-1,-1,-1,-1,17,-1,-1,-1,-1,-1},
	{19,-1,19,19,-1,-1,-1,17,-1,-1,19,-1,-1},
	{19,-1,19,19,-1,-1,-1,18,21,21,19,-1,-1},
	{-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
	{23,-1,23,23,-1,22,-1,21,20,20,23,-1,-1},
	{-1,-1,-1,-1,-1,22,-1,21,21,21,-1,-1,-1},
	{-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2},
	{-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
	{25,-1,25,25,-1,-1,-1,24,-1,-1,25,-1,-1},
	{-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3},
	{26,26,6,26,26,26,26,26,26,26,26,26,26}
};

char	(*index_col)[12] = 
{
	" \t",
	".",
	"\n",
	",",
	"%",
	":";
	"-";
	"0123456789",
	"abcdefghijklmnopqstuvwxyz_",
	"r",
	"#;",
	"\"",
}

char	(*g_instructions)[16] = 
{
	"live",
	"ld",
	"st",
	"add",
	"sub",
	"end";
	"or";
	"xor",
	"zjmp",
	"ldi",
	"sti",
	"fork",
	"lld",
	"lldi",
	"lfork",
	"aff",
}

#endif
